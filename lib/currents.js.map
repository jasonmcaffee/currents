{"version":3,"sources":["../src/currents.js"],"names":["setObjectBasedOnFullPath","require","Currents","constructor","result","nn","EventedProperty","name","fullPath","eventedProperty","eventedPropertyActionFunc","action","handleAction","Proxy","handler","get","parentEventedPropertyActionFunc","parentEventedProperty","eventedProperties","undefined","callbacks","calculateFullPath","fullPathNames","split","fire","data","context","i","len","length","setObject","objectToSet","setValue","defaultSetValue","on","value","omit","remainingFullPathNames","onSetValue","setValueFunction","callback","push","off","bind","callbackIndex","indexOf","splice","rest","console","error","calculatedFullPath","separator","parentObject","objectToSetPropertyNameOnParent","firstFullPathName","nameOfPropertyToSet"],"mappings":"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","file":"currents.js","sourcesContent":["//if Proxy is not natively supported, ensure polyfill is created.\nrequire('../vendor/reflect');\n\nexport class Currents{\n  constructor(){\n    let result = nn(new EventedProperty({name:'', fullPath:''}));\n    return result;\n  }\n}\n\nconst nn = (eventedProperty)=>{\n  // console.log(`nn called with: `, eventedProperty);\n\n  //when a property is invoked as a function, pass the call down to EventedProperty.handleAction, which will use passed\n  //in data to determine which action to perform (fire, on, off)\n  //e.g. occurence.person.name({fire:'some data'}) will invoke this function.\n  let eventedPropertyActionFunc = (action)=>{\n    return eventedProperty.handleAction(action);\n  };\n  //attach eventedProperty so proxy has access.\n  eventedPropertyActionFunc.eventedProperty = eventedProperty;\n\n  //intercept all property access on the wrappedValue function-object\n  return new Proxy(eventedPropertyActionFunc, handler);\n};\n\nconst handler = {\n\n  get: function(parentEventedPropertyActionFunc, name){\n    let parentEventedProperty = parentEventedPropertyActionFunc.eventedProperty;\n    // console.log(`parentEventedProperty is: `, parentEventedProperty);\n    // console.log(`name being accessed is: `, name);\n\n    //create a new evented property with the accessed name, if one doesn't already exist.\n    if(parentEventedProperty.eventedProperties[name] === undefined){\n      parentEventedProperty.eventedProperties[name] = new EventedProperty({name, parentEventedProperty});\n    }\n\n    let eventedProperty = parentEventedProperty.eventedProperties[name];\n\n    //wrap the eventedProperty with trigger function\n    return nn(eventedProperty);\n  },\n};\n\nclass EventedProperty{\n  constructor({parentEventedProperty, name, fullPath}){\n    this.callbacks = [];\n    this.fullPath =  calculateFullPath({parentEventedProperty, name, fullPath});\n    this.fullPathNames = this.fullPath.split('.');\n    this.name = name;\n    this.eventedProperties = {};\n    this.parentEventedProperty = parentEventedProperty;\n  }\n\n  /**\n   *\n   * @param data - data to be sent to each callback.\n   * @param context - when child is fired, we want the parent to have access to the fullPath, etc. of the child.\n   * e.g. occurence.person.on((data, {fullPath})=>{...})   occurence.person.name(fire:'jason')\n   *      should result in person.on fullPath == 'person.name';\n   */\n  fire(data, {context}={}){\n    context = context || this;\n    // console.log(`${this.fullPath} triggered with data: `, data);\n    for(let i = 0, len=this.callbacks.length; i < len; ++i){\n      this.callbacks[i](data, context);\n    }\n    if(this.parentEventedProperty){\n      this.parentEventedProperty.fire(data, {context});\n    }\n  }\n\n  setObject(objectToSet, {setValue=defaultSetValue}={}){\n    // this.objectToSet = objectToSet;\n    this.setValue = setValue;\n    this.on((value, eventedProperty)=>{\n      let {fullPathNames, setValue} = eventedProperty;\n      //omit the first fullPathName, since that represents the objectToSet.\n      //e.g. eventBus.person({objectToSet: person});\n      let [omit, ...remainingFullPathNames] = fullPathNames;\n      fullPathNames = remainingFullPathNames;\n      setObjectBasedOnFullPath({objectToSet, fullPathNames, value, setValue});\n    });\n  }\n\n  onSetValue(setValueFunction){\n    this.setValue = setValueFunction;\n  }\n\n  //todo: once\n  on(callback){\n    this.callbacks.push(callback);\n    let off = function(){\n      return this.off(callback);\n    }.bind(this);\n    return off;\n  }\n\n  off(callback){\n    let callbackIndex = this.callbacks.indexOf(callback);\n    // console.log(`off removing callback at index`, callbackIndex);\n    if(callbackIndex < 0){return;}\n    this.callbacks.splice(callbackIndex, 1);\n    return callback;\n  }\n\n  handleAction(action){\n    if(action === undefined){\n      return this;\n    }\n    let {on, off, fire, setObject, onSetValue, ...rest} = action;\n    let result;\n    switch(true){\n      case on != undefined:\n        result = this.on(on, rest);\n        break;\n      case off !== undefined:\n        this.off(off, rest);\n        break;\n      case fire !== undefined:\n        result = this.fire(fire, rest);\n        break;\n      case setObject !== undefined:\n        result = this.setObject(setObject, rest);\n        break;\n      case onSetValue !== undefined:\n        result = this.onSetValue(onSetValue);\n        break;\n      default:\n        console.error('invalid action: ', action);\n    }\n    return result;\n  }\n}\n\n/**\n * the base evented property is the EventBus, which has a blank name and fullpath, so we don't want to include it in our event string names.\n * @param parentEventedProperty\n * @param name\n * @param fullPath\n * @returns {*}\n */\nfunction calculateFullPath({parentEventedProperty, name, fullPath}){\n  if(fullPath){\n    return fullPath;\n  }\n  let calculatedFullPath;\n  if(parentEventedProperty !== undefined){\n    let separator = parentEventedProperty.fullPath !== '' ? '.' : '';\n    calculatedFullPath = `${parentEventedProperty.fullPath}${separator}${name}`;\n  }else{\n    calculatedFullPath = name;\n  }\n  return calculatedFullPath;\n}\n\n/**\n *\n * @param objectToSet\n * @param fullPathNames - e.g. ['person', 'name']\n * @param value - e.g. 'jason'\n */\nexport function setObjectBasedOnFullPath({objectToSet, fullPathNames, value, parentObject, objectToSetPropertyNameOnParent, setValue=defaultSetValue}){\n  if(fullPathNames.length == 0){\n    objectToSet = value;\n    return;\n  }\n  //ensure there is something to set\n  let firstFullPathName = fullPathNames[0];\n\n  if(fullPathNames.length == 1){\n    setValue({objectToSet, nameOfPropertyToSet: firstFullPathName, value, parentObject, objectToSetPropertyNameOnParent});\n  }else{\n    let [objectToSetPropertyNameOnParent, ...remainingFullPathNames] = fullPathNames;\n    let parentObject = objectToSet;\n    setObjectBasedOnFullPath({\n      objectToSet: objectToSet[firstFullPathName],\n      fullPathNames:remainingFullPathNames,\n      value,\n      parentObject,\n      objectToSetPropertyNameOnParent,\n      setValue,\n    });\n  }\n}\n\nfunction defaultSetValue({objectToSet, nameOfPropertyToSet, value, parentObject, objectToSetPropertyNameOnParent}){\n  //shouldn't ever happen, but check for it anyways.\n  if(parentObject === undefined && objectToSet === undefined){\n    console.error('setValue unable to set value of undefined parentObject and undefined objectToSet', {objectToSet, nameOfPropertyToSet, value, parentObject, objectToSetPropertyNameOnParent} );\n  }\n  if(objectToSet !== undefined){\n    if(typeof objectToSet === \"object\"){\n      objectToSet[nameOfPropertyToSet] = value;\n    }else{\n      console.error('setValue unable to set values on non objects', {objectToSet, nameOfPropertyToSet, value, parentObject, objectToSetPropertyNameOnParent});\n    }\n  }else if(parentObject !== undefined){\n    parentObject[objectToSetPropertyNameOnParent] = {[nameOfPropertyToSet]: value};\n  }\n}"]}